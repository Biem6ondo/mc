local ver = 15

-- Cloud
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer
local camera = Workspace.CurrentCamera

local CloudFolder = Instance.new("Folder", workspace)
CloudFolder.Name = "MinecraftClouds"

local cloudToggle = Instance.new("BoolValue")
cloudToggle.Name = "RenderCloud"
cloudToggle.Value = true
cloudToggle.Parent = CloudFolder

local maxClouds = 12
local cloudHeight = 200
local createdClouds = {}
local cloudSpeed = 0.03
local cloudSize = Vector3.new(70, 5, 70)

local function createCloud(centerPos)
	if not cloudToggle.Value then return end

	local cloud = Instance.new("Model", CloudFolder)
	cloud.Name = "Cloud"

	local blocks = {}
	local numBlocks = math.random(3, 6)

	for i = 1, numBlocks do
		local offsetX = math.random(-1, 1) * cloudSize.X
		local offsetZ = math.random(-1, 1) * cloudSize.Z
		local key = offsetX .. "," .. offsetZ
		if not blocks[key] then
			blocks[key] = true

			local part = Instance.new("Part")
			part.Anchored = true
			part.CanCollide = false
			part.CastShadow = false
			part.Size = cloudSize
			part.Position = centerPos + Vector3.new(offsetX, 0, offsetZ)
			part.Material = Enum.Material.SmoothPlastic
			part.Color = Color3.fromRGB(240, 240, 240)
			part.Parent = cloud

			if not cloud.PrimaryPart then
				cloud.PrimaryPart = part
			end
		end
	end

	table.insert(createdClouds, cloud)
end

local function isTooClose(pos)
	for _, cloud in pairs(createdClouds) do
		if cloud and cloud.PrimaryPart then
			if (cloud.PrimaryPart.Position - pos).Magnitude < 150 then
				return true
			end
		end
	end
	return false
end

RunService.Heartbeat:Connect(function()
	local camPos = camera.CFrame.Position

	if not cloudToggle.Value then
		for i = #createdClouds, 1, -1 do
			local cloud = createdClouds[i]
			if cloud then
				cloud:Destroy()
				table.remove(createdClouds, i)
			end
		end
		return
	end

	for i = #createdClouds, 1, -1 do
		local cloud = createdClouds[i]
		if cloud and cloud.PrimaryPart then
			local currentCFrame = cloud:GetPrimaryPartCFrame()
			local newCFrame = currentCFrame + Vector3.new(cloudSpeed, 0, 0)
			cloud:SetPrimaryPartCFrame(newCFrame)

			if (cloud.PrimaryPart.Position - camPos).Magnitude > 500 then
				cloud:Destroy()
				table.remove(createdClouds, i)
			end
		end
	end

	if #createdClouds < maxClouds then
		local angle = math.random() * math.pi * 2
		local radius = math.random(200, 400)
		local pos = camPos + Vector3.new(math.cos(angle) * radius, 0, math.sin(angle) * radius)
		pos = Vector3.new(pos.X, cloudHeight, pos.Z)

		if not isTooClose(pos) then
			createCloud(pos)
		end
	end
end)

-- Crafting Table

local TweenService = game:GetService("TweenService")

local snowf = Instance.new("Folder", workspace.Minecraft)
snowf.Name = "Snow_Folder"

local folder = ".TexturePack"
local fileName = "CraftingView.png"
local fullPath = folder .. "/" .. fileName
local url = "https://i.postimg.cc/htnWNYvT/Photoroom-20250601-145937.png"

if not isfolder(folder) then makefolder(folder) end
if not isfile(fullPath) then writefile(fullPath, game:HttpGet(url)) end

local guiFolder = Instance.new("Folder", game.CoreGui)
guiFolder.Name = "Crafting_Table"

local screen1 = Instance.new("ScreenGui", guiFolder)
screen1.ScreenInsets = Enum.ScreenInsets.None
screen1.DisplayOrder = 7
screen1.Name = "Open"

local screen2 = Instance.new("ScreenGui", guiFolder)
screen2.DisplayOrder = 8

local background = Instance.new("ImageButton", screen1)
background.BackgroundColor3 = Color3.new(0, 0, 0)
background.Size = UDim2.new(1, 0, 1, 0)
background.BackgroundTransparency = 1
background.AutoButtonColor = false

local content = Instance.new("ImageLabel", screen2)
content.Size = UDim2.new(1, 0, 1, 0)
content.Position = UDim2.new(0, 0, 1, 0)
content.BackgroundTransparency = 1
content.Image = getcustomasset(fullPath)
content.ScaleType = Enum.ScaleType.Fit

local closeBtn = Instance.new("ImageButton", content)
closeBtn.Size = UDim2.new(0, 100, 0, 100)
closeBtn.Position = UDim2.new(0.7, 0, 0, 0)
closeBtn.BackgroundTransparency = 1

local tweenUp = TweenService:Create(content, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
Position = UDim2.new(0, 0, 0, 0)
})
local fadeIn = TweenService:Create(background, TweenInfo.new(0.6), {
BackgroundTransparency = 0.5
})

local tweenDown = TweenService:Create(content, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
Position = UDim2.new(0, 0, 1, 0)
})
local fadeOut = TweenService:Create(background, TweenInfo.new(0.6), {
BackgroundTransparency = 1
})

screen1.Enabled = false
screen2.Enabled = false

screen1:GetPropertyChangedSignal("Enabled"):Connect(function()
if screen1.Enabled then
content.Position = UDim2.new(0, 0, 1, 0)
background.BackgroundTransparency = 1
screen2.Enabled = true
tweenUp:Play()
fadeIn:Play()
end
end)

closeBtn.MouseButton1Click:Connect(function()
tweenDown:Play()
fadeOut:Play()
tweenDown.Completed:Wait()
screen1.Enabled = false
screen2.Enabled = false
game.CoreGui.RobloxGui.Enabled = true
end)

screen1.Enabled = true

local backpack = Instance.new("ScrollingFrame", content)
backpack.Position = UDim2.new(0.492, 0, 0.52, 0)
backpack.Size = UDim2.new(0.3, 0, 0.22, 0)
backpack.BackgroundTransparency = 1
backpack.ScrollBarThickness = 0
backpack.ScrollingDirection = Enum.ScrollingDirection.Y
backpack.AutomaticCanvasSize = Enum.AutomaticSize.Y
backpack.CanvasSize = UDim2.new(0, 0)

local uigrid = Instance.new("UIGridLayout", backpack)
uigrid.CellSize = UDim2.new(0, 30, 0, 30)
uigrid.CellPadding = UDim2.new(0, 7, 0, 7)
uigrid.FillDirectionMaxCells = 9

local function createItem(img, name)
local i = Instance.new("ImageButton", backpack)
i.Image = img
i.Name = name
i.BackgroundTransparency = 0
i.BackgroundColor3 = Color3.new(0.545, 0.545, 0.545) -- Test bruh
end

for _, item in ipairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
if item:IsA("Tool") then
createItem(item.TextureId, item.Name)
end
end
    screen1.Enabled = false
    screen2.Enabled = false

local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local minecraft = workspace:FindFirstChild("Minecraft")
if not minecraft then return end
print("Module: Block Function Loaded! " .. ver)

-- Leaf !

local offsets = {
    Vector3.new(8, 0, 0),
    Vector3.new(-8, 0, 0),
    Vector3.new(0, 8, 0),
    Vector3.new(0, -8, 0),
    Vector3.new(0, 0, 8),
    Vector3.new(0, 0, -8)
}

local function getOrCreateFolder(name)
    local f = minecraft:FindFirstChild(name)
    if not f then
        f = Instance.new("Folder")
        f.Name = name
        f.Parent = minecraft
    end
    return f
end

local folders = {
    Leaf = getOrCreateFolder("Leaf_Folder"),
    White_Glass = getOrCreateFolder("Glass_Folder"),
    Barrier = getOrCreateFolder("Barrier_Folder")
}

local function getNearbyParts(position, radius)
    local region = Region3.new(position - Vector3.new(radius, radius, radius), position + Vector3.new(radius, radius, radius)):ExpandToGrid(4)
    return workspace:FindPartsInRegion3(region, nil, math.huge)
end

local function revealNearbyParts(centerPart)
    for _, offset in ipairs(offsets) do
        local targetPos = centerPart.Position + offset
        for _, part in ipairs(getNearbyParts(targetPos, 2)) do
            if part:IsA("BasePart") and part ~= centerPart then
                if (part.Position - targetPos).Magnitude <= 0.1 then
                    part.Transparency = 0
                    for _, decal in ipairs(part:GetDescendants()) do
task.delay(0.1, function()
                        if decal:IsA("Decal") then
                            decal.Transparency = 0
                        end
end)
                    end
                end
            end
        end
    end
end

local function processTransparentPart(part)
    local folder = folders[part.Name]
    if not folder then return end

    part.Parent = folder
    part.Transparency = 1

    for _, d in ipairs(part:GetDescendants()) do
        if d:IsA("Decal") then
            d.Transparency = 0
        end
    end

    part.AncestryChanged:Connect(function(_, parent)
        if not parent then
            return
        end
        part.Transparency = 1
    end)

    revealNearbyParts(part)
end

minecraft.ChildAdded:Connect(function(child)
    task.wait()
    if child:IsA("BasePart") and folders[child.Name] then
        processTransparentPart(child)
    elseif child:IsA("Model") then
        child.ChildAdded:Connect(function(grandchild)
            if grandchild:IsA("BasePart") and folders[grandchild.Name] then
                processTransparentPart(grandchild)
            end
        end)
    end
end)

for _, part in ipairs(minecraft:GetDescendants()) do
    if part:IsA("BasePart") and folders[part.Name] then
        processTransparentPart(part)
    end
end

-- Sand

local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local function getGroundInfo(part, rayParams)
	local ray = workspace:Raycast(part.Position, Vector3.new(0, -500, 0), rayParams)
	if ray and ray.Instance then
		return ray.Instance, ray.Position.Y + ray.Instance.Size.Y / 4 + part.Size.Y / 4
	else
		return nil, -500
	end
end

local function addClickDetector(part)
	if not part:FindFirstChildOfClass("ClickDetector") then
		local cd = Instance.new("ClickDetector", part)
		cd.MouseClick:Connect(function()
			part:Destroy()
		end)
	end
end

local function tweenDrop(part)
	addClickDetector(part)

	local rayParams = RaycastParams.new()
	rayParams.FilterDescendantsInstances = {part}
	rayParams.FilterType = Enum.RaycastFilterType.Blacklist

	local tween
	local function startTween()
		local hit, targetY = getGroundInfo(part, rayParams)
		local distance = part.Position.Y - targetY

		if distance > 0 then
			part.CanCollide = false

			local tweenInfo = TweenInfo.new(distance / 30, Enum.EasingStyle.Linear)
			local goal = {Position = Vector3.new(part.Position.X, targetY, part.Position.Z)}
			tween = TweenService:Create(part, tweenInfo, goal)
			tween:Play()
		end
	end

	startTween()

	local conn
	conn = RunService.Heartbeat:Connect(function()
		if not part or not part.Parent then
			conn:Disconnect()
			return
		end

		local hit, targetY = getGroundInfo(part, rayParams)
		local dist = part.Position.Y - targetY

		if dist <= 0.01 then
			if tween then tween:Cancel() end
			part.Position = Vector3.new(part.Position.X, targetY, part.Position.Z)
			part.CanCollide = true

			if hit and hit:IsA("BasePart") then
				return
			else
				startTween()
			end
		elseif not tween or tween.PlaybackState ~= Enum.PlaybackState.Playing then
			startTween()
		end
	end)
end

minecraft.ChildAdded:Connect(function(child)
	task.wait()
	if child:IsA("BasePart") and child.Name == "Sand" then
		tweenDrop(child)
	end
end)

for _, part in ipairs(minecraft:GetDescendants()) do
	if part:IsA("BasePart") and part.Name == "Sand" then
		tweenDrop(part)
	end
end

-- Dirt Grass
-- Glass
-- Glowstone

minecraft.ChildAdded:Connect(function(glow)
task.wait()
if glow:IsA("BasePart") and glow.Name == "Glowstone" then
local light = Instance.new("PointLight")
light.Brightness = 2
light.Range = 18
light.Parent = glow
end
end)

local lighting = game:GetService("Lighting")

task.spawn(function() 
while true do
	task.wait(1)
lighting.Brightness = 1
	local time = lighting.ClockTime

	if time >= 6 and time <= 18 then
		lighting.FogColor = Color3.new(1, 1, 1)
lighting.OutdoorAmbient = Color3.fromRGB(200, 200, 200)
	else
		lighting.FogColor = Color3.new(0, 0, 0)
lighting.OutdoorAmbient = Color3.new(0, 0, 0)
	end
end
end)

-- Test

local Tool = Instance.new("Tool", game.Players.LocalPlayer.Backpack)
Tool.RequiresHandle = false
Tool.Name = "Wooden_Hoe_Item"
Tool.ToolTip = "Wooden Hoe"

local Player = game.Players.LocalPlayer
local Mouse = Player:GetMouse()

local textureFolder = ".TexturePack"
local farmlandName = "FarmlandDry.png"
local dirtName = "Dirt_Face1.png"
local farmlandPath = textureFolder .. "/" .. farmlandName
local dirtPath = textureFolder .. "/" .. dirtName
local farmlandURL = "https://static.wikia.nocookie.net/minecraft_gamepedia/images/6/60/Farmland_%28dry_texture%29_JE2_BE2.png/revision/latest?cb=20201006055318"

if not isfolder(textureFolder) then
    makefolder(textureFolder)
end

if not isfile(farmlandPath) then
    writefile(farmlandPath, game:HttpGet(farmlandURL))
end

local faces = {
    Top = Enum.NormalId.Top,
    Bottom = Enum.NormalId.Bottom,
    Left = Enum.NormalId.Left,
    Right = Enum.NormalId.Right,
    Front = Enum.NormalId.Front,
    Back = Enum.NormalId.Back,
}

local function onActivate()
    local target = Mouse.Target
    if target and target:IsA("BasePart") and (target.Name == "Grass" or target.Name == "Dirt") then
        target.Size = Vector3.new(4, 3.7, 4)
target.Position = target.Position - Vector3.new(0, 0.15, 0)
target.Name = "Test_Block_Changed_1"
        for _, d in ipairs(target:GetChildren()) do
            if d:IsA("Decal") then
                d:Destroy()
            end
        end
        local decalTop = Instance.new("Decal")
        decalTop.Face = faces.Top
        decalTop.Texture = getcustomasset(farmlandPath)
        decalTop.Parent = target
        for faceName, faceEnum in pairs(faces) do
            if faceEnum ~= Enum.NormalId.Top then
                local decal = Instance.new("Decal")
                decal.Face = faceEnum
                decal.Texture = getcustomasset(dirtPath)
                decal.Parent = target
            end
        end
    end
end

Tool.Activated:Connect(onActivate)

-- Barrier

local folderPath = ".TexturePack"
local fileName = "Barrier.png"
local fullPath = folderPath .. "/" .. fileName

if not isfolder(folderPath) then
    makefolder(folderPath)
end

if not isfile(fullPath) then
    writefile(fullPath, game:HttpGet("https://static.wikia.nocookie.net/minecraft/images/8/8d/BarrierNew.png/revision/latest?cb=20190830230156"))
end

local minecraft = workspace:FindFirstChild("Minecraft")
if not minecraft then return end

local barrierFolder = Instance.new("Folder")
barrierFolder.Name = "Barrier_Folder"
barrierFolder.Parent = minecraft

local function addBillboard(part)
    if not part:IsA("BasePart") then return end
    if part:FindFirstChild("BarrierGui") then return end

    part.Transparency = 1

    local billboard = Instance.new("BillboardGui")
    billboard.Name = "BarrierGui"
    billboard.Adornee = part
    billboard.Size = UDim2.new(4, 0, 4, 0)
    billboard.AlwaysOnTop = false
    billboard.Enabled = false
    billboard.Parent = part

    local img = Instance.new("ImageLabel")
    img.Size = UDim2.new(1, 0, 1, 0)
    img.BackgroundTransparency = 1
    img.Image = getcustomasset(fullPath)
    img.Name = "Barrier"
    img.Parent = billboard

    task.defer(function()
        part.Parent = barrierFolder
    end)
end

for _, part in pairs(minecraft:GetDescendants()) do
    if part:IsA("BasePart") and part.Name == "Barrier" then
        addBillboard(part)
    end
end

minecraft.DescendantAdded:Connect(function(desc)
    if desc:IsA("BasePart") and desc.Name == "Barrier" then
        addBillboard(desc)
    end
end)

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local backpack = player:WaitForChild("Backpack")

local folderPath = workspace:WaitForChild("Minecraft"):WaitForChild("Barrier_Folder")

RunService.RenderStepped:Connect(function()
    local hasBarrierTool = backpack:FindFirstChild("Barrier_Item") ~= nil

    for _, descendant in pairs(folderPath:GetDescendants()) do
        if descendant:IsA("BillboardGui") then
            descendant.Enabled = not hasBarrierTool
        end
    end
end)

-- Barrier part 2
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

RunService.Heartbeat:Connect(function()
		for _, t in ipairs(minecraft:WaitForChild("Barrier_Folder"):GetChildren()) do
			task.wait()
			if t:IsA("BasePart") and t.Name == "Barrier" then
				t.Transparency = 1

				local rayOrigin = t.Position
				local rayDirection = Vector3.new(0, -4, 0)
				local rayParams = RaycastParams.new()
				rayParams.FilterDescendantsInstances = {minecraft:WaitForChild("Barrier_Folder")}
				rayParams.FilterType = Enum.RaycastFilterType.Blacklist

				local result = workspace:Raycast(rayOrigin, rayDirection, rayParams)

				if result and result.Instance then
					local partBelow = result.Instance
					if partBelow:IsA("BasePart") then
						partBelow.Transparency = 0
						
						for _, decal in ipairs(partBelow:GetDescendants()) do
							if decal:IsA("Decal") then
								decal.Transparency = 0
							end
						end
					end
				end
			end
		end
end)

-- Crafting_Func

local function setupClickDetector(part)
    if part:IsA("BasePart") and part.Name == "Crafting_Table" then
        if not part:FindFirstChildOfClass("ClickDetector") then
            local click = Instance.new("ClickDetector")
            click.Parent = part
            click.MouseClick:Connect(function(player)
                print("Clicked:", part.Name)
    screen1.Enabled = true
    screen2.Enabled = true
game.CoreGui.RobloxGui.Enabled = false
            end)
        end
    end
end

for _, child in ipairs(minecraft:GetChildren()) do
    setupClickDetector(child)
end

minecraft.ChildAdded:Connect(function(child)
    setupClickDetector(child)
end)

--Structure Void
local Minecraft = workspace:WaitForChild("Minecraft")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()

local folder = Minecraft:FindFirstChild("Structure_Void") or Instance.new("Folder")
folder.Name = "Structure_Void_Folder"
folder.Parent = Minecraft

local function setVoidProperty(part)
    task.spawn(function()
        while task.wait() do
            if part and part:IsDescendantOf(folder) then
                part.CanCollide = false
                part.Transparency = 1
            else
                break
            end
        end
    end)
end

local function handlePart(part)
    if part:IsA("BasePart") and part.Name == "Structure_Void" then
        task.wait()
        part.Parent = folder
        setVoidProperty(part)
    end
end

for _, obj in ipairs(Minecraft:GetChildren()) do
    handlePart(obj)
end

Minecraft.ChildAdded:Connect(handlePart)

local decalVisible = false
task.spawn(function()
    while true do
        for _, p in ipairs(folder:GetChildren()) do
            if p:IsA("BasePart") then
                for _, d in ipairs(p:GetChildren()) do
                    if d:IsA("Decal") then
d.Name = "1259851374"
                        d.Transparency = decalVisible and 0 or 1
                    end
                end
            end
        end
        task.wait()
    end
end)

local function onToolEquipped(tool)
    if tool.Name == "Structure_Void_Item" then
        decalVisible = true
        tool.Unequipped:Connect(function()
            decalVisible = false
        end)
    end
end

char.ChildAdded:Connect(function(child)
    if child:IsA("Tool") then
        onToolEquipped(child)
    end
end)

for _, tool in ipairs(char:GetChildren()) do
    if tool:IsA("Tool") then
        onToolEquipped(tool)
    end
end

-- More Again
local runService = game:GetService("RunService")
local workspace = game:GetService("Workspace")
local Minecraft = workspace:WaitForChild("Minecraft")

local offsets = {
    Vector3.new(8, 0, 0),
    Vector3.new(-8, 0, 0),
    Vector3.new(0, 8, 0),
    Vector3.new(0, -8, 0),
    Vector3.new(0, 0, 8),
    Vector3.new(0, 0, -8)
}

local RunService = game:GetService("RunService")
local Minecraft = workspace:WaitForChild("Minecraft")
local LeafFolder = Minecraft:WaitForChild("Leaf_Folder")

local INDEX = 1
local BATCH_SIZE = 10

RunService.Heartbeat:Connect(function()
	local leaves = LeafFolder:GetChildren()
	for i = INDEX, math.min(INDEX + BATCH_SIZE - 1, #leaves) do
		local leaf = leaves[i]
		if leaf:IsA("BasePart") then
			local apply = false
			for _, d in ipairs(leaf:GetDescendants()) do
				if d:IsA("Decal") and d.Texture and d.Texture ~= "" then
					apply = true
					break
				end
			end
			if apply then
				leaf.Transparency = 1
			end
		end
	end
	INDEX = INDEX + BATCH_SIZE
	if INDEX > #leaves then
		INDEX = 1
	end
end)

runService.Heartbeat:Connect(function()
    for _, glass in ipairs(Minecraft.Glass_Folder:GetChildren()) do  
        if glass:IsA("BasePart") then  
            glass.Transparency = 0.9  
            glass.Color = Color3.new(1, 1, 1)  
        end  
    end
end)

task.spawn(function()
    local rayParams = RaycastParams.new()
    rayParams.FilterDescendantsInstances = {Minecraft}
    rayParams.FilterType = Enum.RaycastFilterType.Whitelist

    local offsetIndex = 1

    while true do
        local foldersToCheck = {
            Minecraft.Glass_Folder,
            Minecraft.Leaf_Folder,
            Minecraft.Barrier_Folder,
            Minecraft.Snow_Folder,
Minecraft.Structure_Void_Folder,
        }

        for _, folder in ipairs(foldersToCheck) do
            for _, block in ipairs(folder:GetChildren()) do
task.wait()
                if block:IsA("BasePart") then
                    local origin = block.Position
                    local direction = offsets[offsetIndex]

                    local result = workspace:Raycast(origin, direction, rayParams)
                    if result and result.Instance then
                        for _, child in ipairs(result.Instance:GetChildren()) do
                            if child:IsA("Decal") and child.Transparency == 1 and child.Name ~= "1259851374" then
                                child.Transparency = 0
                            end
                        end
                    end
                end
            end
        end

        offsetIndex += 1
        if offsetIndex > #offsets then offsetIndex = 1 end

        task.wait(0.05)
    end
end)

-- Snow

local Minecraft = workspace:WaitForChild("Minecraft")
local snowf = Minecraft:WaitForChild("Snow_Folder")

local function addClickToSnow(snow)
	local click = Instance.new("ClickDetector")
	click.Parent = snow
	click.MouseClick:Connect(function()
		if snow and snow:IsDescendantOf(workspace) then
			snow:Destroy()
		end
	end)
end

local function setupSnow(snow)
	if not snow:IsA("Part") or snow.Name ~= "Snow" then return end

	task.defer(function()
		if not snow or not snow:IsDescendantOf(workspace) then return end

		snow.Size = Vector3.new(4, 0.5, 4)
		snow.CanCollide = false
		snow.BrickColor = BrickColor.White()
		snow.Position = Vector3.new(snow.Position.X, snow.Position.Y - 1.75, snow.Position.Z)
		snow.Parent = snowf

		addClickToSnow(snow)

		local rayOrigin = snow.Position
		local rayDirection = Vector3.new(0, -4, 0)

		local params = RaycastParams.new()
		params.FilterDescendantsInstances = {snow}
		params.FilterType = Enum.RaycastFilterType.Blacklist

		local result = workspace:Raycast(rayOrigin, rayDirection, params)
		if result and result.Instance and result.Instance:IsA("Part") and result.Instance.Name == "Snow" then
			local below = result.Instance
			if below.Size.Y < 4 then
				local baseY = below.Position.Y - below.Size.Y / 2
				local newYSize = math.clamp(below.Size.Y + 0.5, 0.5, 4)
				below.Size = Vector3.new(4, newYSize, 4)
				below.Position = Vector3.new(below.Position.X, baseY + newYSize / 2, below.Position.Z)
				below.Parent = snowf
				snow:Destroy()
			end
		end
	end)
end

local function checkFloatingAsync()
	local snowParts = snowf:GetChildren()
	for i, part in ipairs(snowParts) do
		task.spawn(function()
			if part:IsA("Part") and part.Name == "Snow" then
				local rayOrigin = part.Position
				local rayDirection = Vector3.new(0, -3, 0)

				local params = RaycastParams.new()
				params.FilterDescendantsInstances = {part}
				params.FilterType = Enum.RaycastFilterType.Blacklist

				local result = workspace:Raycast(rayOrigin, rayDirection, params)
				if not result then
					part:Destroy()
				end
			end
		end)
		if i % 500 == 0 then task.wait() end
	end
end

for _, child in pairs(Minecraft:GetChildren()) do
	setupSnow(child)
end

Minecraft.ChildAdded:Connect(function(child)
	setupSnow(child)
	task.defer(checkFloatingAsync)
end)

Minecraft.ChildRemoved:Connect(function()
	task.defer(checkFloatingAsync)
end)

-- Mobile Touch

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")
local SoundService = game:GetService("SoundService")

local player = Players.LocalPlayer
local mouse = player:GetMouse()

local soundFolderName = ".MCSFX"
if not isfolder(soundFolderName) then
    makefolder(soundFolderName)
end

local soundURLs = {
    "https://files.catbox.moe/8zznok.ogg",
    "https://files.catbox.moe/4587kz.ogg",
    "https://files.catbox.moe/91eal7.ogg",
    "https://files.catbox.moe/142gl7.ogg",
}

local soundPaths = {}

for i, url in ipairs(soundURLs) do
    local fileName = soundFolderName.."/sound"..i..".ogg"
    if not isfile(fileName) then
        writefile(fileName, game:HttpGet(url))
    end
    table.insert(soundPaths, getcustomasset(fileName))
end

if not isfolder(".TexturePack") then
    makefolder(".TexturePack")
end

local imageName = "TouchImage"
local imagePath = ".TexturePack/"..imageName..".png"
local imageURL = "https://i.postimg.cc/26Hx6Fbg/Background-Eraser-20250618-204319148.png"

if not isfile(imagePath) then
    writefile(imagePath, game:HttpGet(imageURL))
end

local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "TouchImageGUI"
gui.ResetOnSpawn = false

local img = Instance.new("ImageLabel")
img.Size = UDim2.new(0, 160, 0, 160)
img.BackgroundTransparency = 1
img.Image = getcustomasset(imagePath)
img.Visible = false
img.AnchorPoint = Vector2.new(0.5, 0.5)
img.ZIndex = 9999
img.Parent = gui

local function playRandomSound()
    local randomPath = soundPaths[math.random(1, #soundPaths)]
    local sound = Instance.new("Sound")
    sound.SoundId = randomPath
    sound.Volume = 1
    sound.PlayOnRemove = true
    sound.Parent = SoundService
    sound:Destroy()
end

if UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled then
    local touchInput = nil

    UserInputService.TouchStarted:Connect(function(input, gameProcessed)
        if not gameProcessed and not touchInput then
            local part = Workspace:FindPartOnRayWithIgnoreList(Ray.new(Workspace.CurrentCamera.CFrame.Position, (Workspace.CurrentCamera:ScreenPointToRay(input.Position.X, input.Position.Y).Direction * 1000)), {player.Character})
            if not part then
                playRandomSound()
            end

            touchInput = input
            img.Position = UDim2.new(0, input.Position.X, 0, input.Position.Y)
            img.Visible = true
        end
    end)

    UserInputService.TouchMoved:Connect(function(input)
        if input == touchInput then
            img.Position = UDim2.new(0, input.Position.X, 0, input.Position.Y)
        end
    end)

    UserInputService.TouchEnded:Connect(function(input)
        if input == touchInput then
            touchInput = nil
            img.Visible = false
        end
    end)
end

-- Anti Death From Void

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()

local folder = Instance.new("Folder", workspace)
folder.Name = "VoidTeleportParts"

local range = 5
for x = -range, range do
	for z = -range, range do
		local p = Instance.new("Part")
		p.Size = Vector3.new(2048, 4, 2048)
		p.Anchored = true
		p.Transparency = 1
		p.CanCollide = true
		p.Position = Vector3.new(x * 2048, -400, z * 2048)
		p.Parent = folder

		p.Touched:Connect(function(hit)
			local toucher = hit:FindFirstAncestorOfClass("Model")
			if toucher and toucher:FindFirstChild("Humanoid") and toucher == player.Character then
				local root = toucher:FindFirstChild("HumanoidRootPart")
				if root then
_G.sendMessage(game.Players.LocalPlayer.Name .. " fell out of the world", Color3.fromRGB(255, 255, 255))
for i = 1, 100 do
					root.CFrame = CFrame.new(0, 16, 0)
task.wait(0.02)
end
				end
			end
		end)
	end
end

-- Cannot Place < -4

local debounce = {}

Minecraft.DescendantAdded:Connect(function(obj)
	if obj:IsA("BasePart") then
		task.defer(function()
			if debounce[obj] then return end
			debounce[obj] = true
			if obj:IsDescendantOf(Minecraft) and obj.Position.Y < -3 then
				obj:Destroy()
			end
		end)
	end
end)

-- Fire

local Minecraft = workspace:WaitForChild("Minecraft")
local http = game:GetService("HttpService")

if not isfile(".TexturePack/fire_layer_0.png") then
writefile(".TexturePack/fire_layer_0.png", game:HttpGet("https://i.postimg.cc/JtV1Zf5G/fire-layer-0.png"))
end
if not isfile(".TexturePack/fire_layer_1.png") then
writefile(".TexturePack/fire_layer_1.png", game:HttpGet("https://i.postimg.cc/4xGcTqRf/fire-layer-1.png"))
end
if not isfile(".TexturePack/FireSpawn.ogg") then
writefile(".TexturePack/FireSpawn.ogg", game:HttpGet("https://files.catbox.moe/1obyxy.ogg"))
end
if not isfile(".TexturePack/fire_layer.mcmeta") then
writefile(".TexturePack/fire_layer.mcmeta", [[
{
"animation": {
"frametime": 2
}
}
]])
end
if not isfile(".TexturePack/fire_sound.ogg") then
writefile(".TexturePack/fire_sound.ogg", game:HttpGet("https://files.catbox.moe/l82h12.ogg"))
end

local tex0 = getcustomasset(".TexturePack/fire_layer_0.png")
local tex1 = getcustomasset(".TexturePack/fire_layer_1.png")
local soundAsset = getcustomasset(".TexturePack/fire_sound.ogg")
local soundSpawn = getcustomasset(".TexturePack/FireSpawn.ogg")

local delay = 0.1
local success, data = pcall(function()
return http:JSONDecode(readfile(".TexturePack/fire_layer.mcmeta"))
end)
if success and data.animation and tonumber(data.animation.frametime) then
delay = tonumber(data.animation.frametime) * 0.05
end

local excludedFaces = {
[Enum.NormalId.Top] = true,
[Enum.NormalId.Bottom] = true,
}

local totalFrames = 32
local frameHeight = 16

local folder = Minecraft:FindFirstChild("Fire_Folder") or Instance.new("Folder", Minecraft)
folder.Name = "Fire_Folder"

Minecraft.ChildAdded:Connect(function(child)
if child:IsA("Part") and child.Name == "Fire" then
task.wait()
child.Parent = folder
task.spawn(function()
while child and child.Parent do
child.Transparency = 1
child.CanCollide = false
task.wait(0.4)
end
end)

local light = Instance.new("PointLight", child)
light.Color = Color3.new(1, 0.4, 0.1)
light.Brightness = 2
light.Range = 10

local fi = Instance.new("Sound", child)
fi.SoundId = soundSpawn
fi.Looped = false
fi.Volume = 1
fi:Play()

local fireSound = Instance.new("Sound", child)      
fireSound.SoundId = soundAsset      
fireSound.Looped = false      
fireSound.Volume = 1      
task.spawn(function()      
	while child and child.Parent do      
		fireSound:Play()      
		task.wait(math.random(2, 3))      
	end      
end)      

local r = 5      
local cx, cy, cz = child.Position.X, child.Position.Y, child.Position.Z      

local offsets = {      
	{Vector3.new(0,4,4), Vector3.new(cx+1.5,cy,cz), Vector3.new(0,0,r)},      
	{Vector3.new(0,4,4), Vector3.new(cx-1.5,cy,cz), Vector3.new(0,0,r)},      
	{Vector3.new(0,4,4), Vector3.new(cx-1.85,cy,cz), Vector3.new(0,0,-r)},      
	{Vector3.new(0,4,4), Vector3.new(cx-0.15,cy,cz), Vector3.new(0,0,-r)},      
	{Vector3.new(4,4,0), Vector3.new(cx,cy,cz+1.85), Vector3.new(-r,0,0)},      
	{Vector3.new(4,4,0), Vector3.new(cx,cy,cz+0.15), Vector3.new(-r,0,0)},      
	{Vector3.new(4,4,0), Vector3.new(cx,cy,cz-1.85), Vector3.new(r,0,0)},      
	{Vector3.new(4,4,0), Vector3.new(cx,cy,cz-0.15), Vector3.new(-r,0,0)},      
}      

local imageList = {}      

for _, v in ipairs(offsets) do      
	local a = Instance.new("Part", child)      
	a.Size, a.Position, a.Rotation = unpack(v)      
	a.Anchored = true      
	a.Transparency = 1      
	a.CanCollide = false      
a.Name = "1259851374"

	for _, face in ipairs(Enum.NormalId:GetEnumItems()) do      
		if not excludedFaces[face] then      
			local gui = Instance.new("SurfaceGui", a)      
			gui.Face = face      
			gui.AlwaysOnTop = false      
			gui.LightInfluence = 0      

			local img0 = Instance.new("ImageLabel", gui)      
			img0.Size = UDim2.new(1, 0, 1, 0)      
			img0.Position = UDim2.new(0, 0, 0, 0)      
			img0.BackgroundTransparency = 1      
			img0.Image = tex0      
			img0.ScaleType = Enum.ScaleType.Crop      
			img0.ResampleMode = Enum.ResamplerMode.Pixelated      

			local img1 = img0:Clone()      
			img1.Image = tex1      
			img1.Parent = gui      

			table.insert(imageList, {img0, img1})      
		end      
	end      
end      

task.spawn(function()      
	while child and child.Parent do      
		for i = 0, totalFrames - 1 do      
			local offset = Vector2.new(0, i * frameHeight)      
			local size = Vector2.new(16, 16)      
			for _, pair in ipairs(imageList) do      
				local img0, img1 = unpack(pair)      
				img0.ImageRectOffset = offset      
				img0.ImageRectSize = size      
				img1.ImageRectOffset = offset      
				img1.ImageRectSize = size      
			end      
			task.wait(delay)      
		end      
	end      
end)

end

end)

local FireFolder = workspace:WaitForChild("Minecraft"):WaitForChild("Fire_Folder")

local offsets = {
	Vector3.new(4, 0, 0),
	Vector3.new(-4, 0, 0),
	Vector3.new(0, 4, 0),
	Vector3.new(0, -4, 0),
	Vector3.new(0, 0, 4),
	Vector3.new(0, 0, -4),
}

task.spawn(function()
	while true do
		for _, fire in pairs(FireFolder:GetChildren()) do
			if fire:IsA("Part") and fire.Name == "Fire" then
				for _, offset in ipairs(offsets) do
					local checkPos = fire.Position + offset
					for _, p in ipairs(workspace:GetPartBoundsInBox(CFrame.new(checkPos), fire.Size)) do
						if p:IsA("Part") and p.Name ~= "1259851374" and p ~= fire then
							for _, d in ipairs(p:GetDescendants()) do
								if d:IsA("Decal") then
									d.Transparency = 0
								end
							end
						end
					end
				end
			end
		end
		task.wait(0.5)
	end
end)