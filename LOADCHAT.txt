


if not isfile(".TexturePack/MCFont.lua") then
writefile(".TexturePack/MCFont.lua", [[
return function(text, scale, bgTrans, color, pos, parent, maxLineWidth)
	local F = Instance.new("Frame")
	F.Size = UDim2.new(0, 1000, 0, 1000)
	F.Position = pos
	F.BackgroundColor3 = Color3.new()
	F.BackgroundTransparency = bgTrans
	F.ClipsDescendants = true
F.BorderSizePixel = 0

	local holder = Instance.new("Frame", F)
	holder.Size = UDim2.new(1, 0, 1, 0)
	holder.BackgroundTransparency = 1

	local path = ".TexturePack/ascii.png"
	if not isfile(path) then return end
	local fontImage = getcustomasset(path)

	local size = 8
	local widthTable = {
		i = 3, l = 4, t = 5, j = 5, f = 5, r = 5,
		m = 6, w = 8, I = 4, T = 6, J = 5, F = 6,
		[" "] = 4, ["."] = 3, [","] = 3, ["'"] = 2, [":"] = 3,
	}
	local function getCharWidth(c)
		local default = 6
		return widthTable[c] or default
	end

	local x, y = 0, 0
	local maxX, maxY = 0, 0

	for i = 1, #text do
		local c = string.sub(text, i, i)

		if c == "\n" then
			y += size * scale + 2
			x = 0
		else
			local byte = string.byte(c)
			if byte and byte >= 0 and byte <= 255 then
				local charWidth = getCharWidth(c) * scale
				if maxLineWidth and x + charWidth > maxLineWidth then
					y += size * scale + 2
					x = 0
				end

				local col = byte % 16
				local row = math.floor(byte / 16)

				local label = Instance.new("ImageLabel", holder)
				label.Size = UDim2.new(0, size * scale, 0, size * scale)
				label.Position = UDim2.new(0, x, 0, y)
				label.BackgroundTransparency = 1
				label.Image = fontImage
				label.ImageRectOffset = Vector2.new(col * size, row * size)
				label.ImageRectSize = Vector2.new(size, size)
				label.ResampleMode = Enum.ResamplerMode.Pixelated
				label.ImageColor3 = color

				x += charWidth + 1
				if x > maxX then maxX = x end
				if y > maxY then maxY = y end
			end
		end
	end

	if maxLineWidth then
		F.Size = UDim2.new(0, maxLineWidth + 4, 0, y + size * scale + 4)
	else
		F.Size = UDim2.new(0, maxX + 4, 0, y + size * scale + 4)
	end

	if parent then
		F.Parent = parent
	else
		local gui = Instance.new("ScreenGui", game.CoreGui)
		gui.ResetOnSpawn = false
		F.Parent = gui
	end

	return F
end
]])
end

if not isfile(".TexturePack/ascii.png") then
makefolder(".TexturePack")
writefile(".TexturePack/ascii.png", game:HttpGet("https://i.postimg.cc/GtXq8Dw2/ascii.png"))
end

